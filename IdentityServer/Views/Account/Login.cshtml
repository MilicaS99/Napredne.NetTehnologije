@model LoginViewModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<Domain.Person> SignInManager
@inject UserManager<Domain.Person> UserManager
<div class="login-page">
    <div class="lead">
        <h1>Login Page</h1>
        <p>Choose how to login</p>
    </div>

    <partial name="_ValidationSummary" />

    <div class="row">

        @if (Model.EnableLocalLogin)
        {
<div class="col-sm-6">
    <div class="card">
        <div class="card-header">
            <h2>Local Account</h2>
        </div>

        <div class="card-body">
            <form asp-route="Login">
                <input type="hidden" asp-for="ReturnUrl" />

                <div class="form-group">
                    <label asp-for="Username"></label>
                    <input class="form-control" placeholder="Username" asp-for="Username" autofocus>
                </div>
                <div class="form-group">
                    <label asp-for="Password"></label>
                    <input type="password" class="form-control" placeholder="Password" asp-for="Password" autocomplete="off">
                </div>
                @*@if (Model.AllowRememberLogin)
                {
<div class="form-group">
    <div class="form-check">
        <input class="form-check-input" asp-for="RememberLogin">
        <label class="form-check-label" asp-for="RememberLogin">
            Remember My Login
        </label>
    </div>
</div>}*@
                <div class="form-group">
                    <a asp-action="Register"
                       asp-controller="Account"
                       asp-route-returnUrl="@Model.ReturnUrl">
                        Haven't got an account yet? Click here.
                    </a>
                </div>
                <button class="btn btn-primary" name="button" value="login">Login</button>
           
            </form>
        </div>
    </div>
</div>}

    <form asp-controller="Account" asp-action="ExternalLogin"
          asp-route-returnUrl="@Model.ReturnUrl" method="post">
        @foreach (var provider in Model.ExternalProviderss)
        {
           <button name="provider"
                            type="submit"
                            value="@provider.Name">
                        @provider.Name
                    </button>}
    </form>